#version 420 core
out vec4 frag_color;

in vec2 pass_texcoords;

uniform sampler2D image;
uniform bool horizontal;

// automatically generated by GenerateGaussFunctionCode in GaussianBlur.h
vec3 GaussianBlur(sampler2D tex0, vec2 centreUV, vec2 pixelOffset)
{
    vec3 colOut = vec3( 0, 0, 0 );

    vec2 texCoordOffset = 0.36786 * pixelOffset;
    vec3 col = texture( tex0, centreUV + texCoordOffset ).xyz + 
			    texture( tex0, centreUV - texCoordOffset ).xyz;
    colOut += 0.49551 * col; 

    return colOut;
}

void main()
{
    vec2 tex_offset = 1.0 / textureSize(image, 0); // gets size of single texel

    vec3 result;
    if(horizontal)
		result = GaussianBlur(image, pass_texcoords, vec2(tex_offset.x, 0.0));
    else
		result = GaussianBlur(image, pass_texcoords, vec2(0.0, tex_offset.y));

    frag_color = vec4(result, 1.0);
}